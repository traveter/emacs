(global-set-keys ((kbd "C-c ;") 'comment-or-uncomment-region)
		 ((kbd "C-h") 'delete-backward-char)
		 ((kbd "M-h") 'backward-kill-word)
		 ;; ((kbd "M-r") 'replace-string)
		 ;; ((kbd "M-g") 'goto-line)
		 ((kbd "C-x e") 'eval-current-buffer)
		 ((kbd "C-c C-u") 'cua-mode)
		 ;; ((kbd "C-.") 'forward-word)
		 ;; ((kbd "C-,") 'backward-word)
		 ((kbd "C-.") 'forward-word)
		 ((kbd "C-,") 'backward-word)
		 ((kbd "C-x 4") 'user:window-set)
		 ([C-left] 'shrink-window-horizontally)
		 ([C-right] 'enlarge-window-horizontally)
		 ([C-up] 'shrink-window)
		 ([C-down] 'enlarge-window)
		 ((kbd "C-o") 'occur)
		 ((kbd "C-x l") 'my:duplicate-line-and-comment)
		 )

(defun user:window-set()
  (interactive)
  (split-window-horizontally (/ (frame-width) 3))
  )

(defun my:duplicate-line-and-comment ()
  (interactive)
  (save-excursion
    (beginning-of-line)
    (let ((begin (point)))
      (end-of-line)
      (kill-ring-save begin (point))
      ))
  (beginning-of-line)
  (let ((begin (point)))
    (end-of-line)
    (comment-region begin (point))
    (end-of-line)
    (newline)
    (yank)
    ))
;; (defun my:duplicate-line-and-comment ()
;;   (interactive)
;;   (save-excursion
;;     (beginning-of-line)
;;     (let ((begin (point)))
;;       (end-of-line)
;;       (kill-ring-save begin (point))
;;       ))
;;   (beginning-of-line)
;;   (let ((begin (point)))
;;     (end-of-line)
;;     (comment-region begin (point))
;;     (end-of-line)
;;     (newline)
;;     (yank)
;;     ))

(define-keys mode-specific-map
  ("c" 'compile)
  ("g" 'goto-line)
  ("r" 'replace-string)
  ("," 'clipboard-kill-ring-save)
  ("." 'clipboard-yank)
  ;; (";" 'hs-toggle-hiding)
  ((kbd "C-n") 'forward-word)
  ((kbd "C-p") 'backward-word)
  )

;; (add-hook 'c-mode-common-hook '(lambda () (hs-minor-mode 1)))
;; (add-hook 'emacs-lisp-mode-hook '(lambda () (hs-minor-mode 1)))
;; (add-hook 'java-mode-hook '(lambda () (hs-minor-mode 1)))
;; (add-hook 'php-mode-hook '(lambda () (hs-minor-mode 1)))

(defun my-fullscreen ()
  (interactive)
  (let ((fullscreen (frame-parameter (selected-frame) 'fullscreen)))
    (cond
     ((null fullscreen)
      (set-frame-parameter (selected-frame) 'fullscreen 'fullboth))
     (t
      (set-frame-parameter (selected-frame) 'fullscreen 'nil))))
  (redisplay))
(global-set-key [f11] 'my-fullscreen)

					; windmove
(global-set-keys ((kbd "C-: C-u") 'windmove-up)
		 ((kbd "C-: C-d") 'windmove-down)
		 ((kbd "C-: C-r") 'windmove-right)
		 ((kbd "C-: C-l") 'windmove-left)
		 )

(defun window-resizer ()  "Control window size and position."  (interactive)
  (let ((window-obj (selected-window)) (current-width (window-width))
	(current-height (window-height))
	(dx (if (= (nth 0 (window-edges)) 0) 1 -1))
	(dy (if (= (nth 1 (window-edges)) 0) 1 -1)) c)
    (catch 'end-flag (while t
		       (message "size[%dx%d]" (window-width) (window-height))
		       (setq c (read-char))
		       (cond ((= c ?l) (enlarge-window-horizontally dx))
			     ((= c ?h) (shrink-window-horizontally dx))
			     ((= c ?j) (enlarge-window dy))
			     ((= c ?k) (shrink-window dy))
			     ;; otherwise              (t               (message "Quit")
			     (throw 'end-flag t))))))
(global-set-key (kbd "C-c C-w") 'window-resizer)

(when (autoload-if-found 'sr-speedbar-toggle "sr-speedbar" nil t)
  (global-set-key [f9] 'sr-speedbar-toggle)
  (setq sr-speedbar-width-x 25)
  (setq speedbar-directory-unshown-regexp "^\\'"))
(add-hook 'speedbar-mode-hook
	  '(lambda ()
	     (speedbar-add-supported-extension '("js" "as" "html" "css" "php[0-9]?" "tpl"))))

;;------------------------------------------------------
;; マウス設定
;;------------------------------------------------------
(if window-system
    (progn
      ;; 右ボタンの割り当て(押しながらの操作)をはずす。
      (global-unset-key [down-mouse-3])
      ;; マウスの右クリックメニューを出す(押して、離したときにだけメニューが出る)
      (defun bingalls-edit-menu (event)
	(interactive "e")
	(popup-menu menu-bar-edit-menu))
      (global-set-key [mouse-3] 'bingalls-edit-menu)
      ))
